import ot from "@emotion/styled";
import "@emotion/react";
import * as Fr from "react";
var yo = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function it(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var ir = { exports: {} }, Pe = { exports: {} }, M = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var gr;
function at() {
  if (gr) return M;
  gr = 1;
  var e = typeof Symbol == "function" && Symbol.for, r = e ? Symbol.for("react.element") : 60103, t = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, s = e ? Symbol.for("react.provider") : 60109, c = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, f = e ? Symbol.for("react.concurrent_mode") : 60111, h = e ? Symbol.for("react.forward_ref") : 60112, d = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, S = e ? Symbol.for("react.memo") : 60115, T = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, x = e ? Symbol.for("react.fundamental") : 60117, $ = e ? Symbol.for("react.responder") : 60118, Y = e ? Symbol.for("react.scope") : 60119;
  function E(g) {
    if (typeof g == "object" && g !== null) {
      var K = g.$$typeof;
      switch (K) {
        case r:
          switch (g = g.type, g) {
            case l:
            case f:
            case n:
            case a:
            case o:
            case d:
              return g;
            default:
              switch (g = g && g.$$typeof, g) {
                case c:
                case h:
                case T:
                case S:
                case s:
                  return g;
                default:
                  return K;
              }
          }
        case t:
          return K;
      }
    }
  }
  function w(g) {
    return E(g) === f;
  }
  return M.AsyncMode = l, M.ConcurrentMode = f, M.ContextConsumer = c, M.ContextProvider = s, M.Element = r, M.ForwardRef = h, M.Fragment = n, M.Lazy = T, M.Memo = S, M.Portal = t, M.Profiler = a, M.StrictMode = o, M.Suspense = d, M.isAsyncMode = function(g) {
    return w(g) || E(g) === l;
  }, M.isConcurrentMode = w, M.isContextConsumer = function(g) {
    return E(g) === c;
  }, M.isContextProvider = function(g) {
    return E(g) === s;
  }, M.isElement = function(g) {
    return typeof g == "object" && g !== null && g.$$typeof === r;
  }, M.isForwardRef = function(g) {
    return E(g) === h;
  }, M.isFragment = function(g) {
    return E(g) === n;
  }, M.isLazy = function(g) {
    return E(g) === T;
  }, M.isMemo = function(g) {
    return E(g) === S;
  }, M.isPortal = function(g) {
    return E(g) === t;
  }, M.isProfiler = function(g) {
    return E(g) === a;
  }, M.isStrictMode = function(g) {
    return E(g) === o;
  }, M.isSuspense = function(g) {
    return E(g) === d;
  }, M.isValidElementType = function(g) {
    return typeof g == "string" || typeof g == "function" || g === n || g === f || g === a || g === o || g === d || g === p || typeof g == "object" && g !== null && (g.$$typeof === T || g.$$typeof === S || g.$$typeof === s || g.$$typeof === c || g.$$typeof === h || g.$$typeof === x || g.$$typeof === $ || g.$$typeof === Y || g.$$typeof === b);
  }, M.typeOf = E, M;
}
var N = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hr;
function st() {
  return hr || (hr = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, r = e ? Symbol.for("react.element") : 60103, t = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, s = e ? Symbol.for("react.provider") : 60109, c = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, f = e ? Symbol.for("react.concurrent_mode") : 60111, h = e ? Symbol.for("react.forward_ref") : 60112, d = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, S = e ? Symbol.for("react.memo") : 60115, T = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, x = e ? Symbol.for("react.fundamental") : 60117, $ = e ? Symbol.for("react.responder") : 60118, Y = e ? Symbol.for("react.scope") : 60119;
    function E(y) {
      return typeof y == "string" || typeof y == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      y === n || y === f || y === a || y === o || y === d || y === p || typeof y == "object" && y !== null && (y.$$typeof === T || y.$$typeof === S || y.$$typeof === s || y.$$typeof === c || y.$$typeof === h || y.$$typeof === x || y.$$typeof === $ || y.$$typeof === Y || y.$$typeof === b);
    }
    function w(y) {
      if (typeof y == "object" && y !== null) {
        var ne = y.$$typeof;
        switch (ne) {
          case r:
            var ke = y.type;
            switch (ke) {
              case l:
              case f:
              case n:
              case a:
              case o:
              case d:
                return ke;
              default:
                var mr = ke && ke.$$typeof;
                switch (mr) {
                  case c:
                  case h:
                  case T:
                  case S:
                  case s:
                    return mr;
                  default:
                    return ne;
                }
            }
          case t:
            return ne;
        }
      }
    }
    var g = l, K = f, X = c, ie = s, q = r, i = h, C = n, j = T, V = S, re = t, ue = a, te = o, me = d, _e = !1;
    function He(y) {
      return _e || (_e = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), m(y) || w(y) === l;
    }
    function m(y) {
      return w(y) === f;
    }
    function v(y) {
      return w(y) === c;
    }
    function P(y) {
      return w(y) === s;
    }
    function _(y) {
      return typeof y == "object" && y !== null && y.$$typeof === r;
    }
    function O(y) {
      return w(y) === h;
    }
    function R(y) {
      return w(y) === n;
    }
    function A(y) {
      return w(y) === T;
    }
    function k(y) {
      return w(y) === S;
    }
    function I(y) {
      return w(y) === t;
    }
    function D(y) {
      return w(y) === a;
    }
    function B(y) {
      return w(y) === o;
    }
    function H(y) {
      return w(y) === d;
    }
    N.AsyncMode = g, N.ConcurrentMode = K, N.ContextConsumer = X, N.ContextProvider = ie, N.Element = q, N.ForwardRef = i, N.Fragment = C, N.Lazy = j, N.Memo = V, N.Portal = re, N.Profiler = ue, N.StrictMode = te, N.Suspense = me, N.isAsyncMode = He, N.isConcurrentMode = m, N.isContextConsumer = v, N.isContextProvider = P, N.isElement = _, N.isForwardRef = O, N.isFragment = R, N.isLazy = A, N.isMemo = k, N.isPortal = I, N.isProfiler = D, N.isStrictMode = B, N.isSuspense = H, N.isValidElementType = E, N.typeOf = w;
  }()), N;
}
var yr;
function Ur() {
  return yr || (yr = 1, process.env.NODE_ENV === "production" ? Pe.exports = at() : Pe.exports = st()), Pe.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var Qe, br;
function ct() {
  if (br) return Qe;
  br = 1;
  var e = Object.getOwnPropertySymbols, r = Object.prototype.hasOwnProperty, t = Object.prototype.propertyIsEnumerable;
  function n(a) {
    if (a == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(a);
  }
  function o() {
    try {
      if (!Object.assign)
        return !1;
      var a = new String("abc");
      if (a[5] = "de", Object.getOwnPropertyNames(a)[0] === "5")
        return !1;
      for (var s = {}, c = 0; c < 10; c++)
        s["_" + String.fromCharCode(c)] = c;
      var l = Object.getOwnPropertyNames(s).map(function(h) {
        return s[h];
      });
      if (l.join("") !== "0123456789")
        return !1;
      var f = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(h) {
        f[h] = h;
      }), Object.keys(Object.assign({}, f)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return Qe = o() ? Object.assign : function(a, s) {
    for (var c, l = n(a), f, h = 1; h < arguments.length; h++) {
      c = Object(arguments[h]);
      for (var d in c)
        r.call(c, d) && (l[d] = c[d]);
      if (e) {
        f = e(c);
        for (var p = 0; p < f.length; p++)
          t.call(c, f[p]) && (l[f[p]] = c[f[p]]);
      }
    }
    return l;
  }, Qe;
}
var Je, vr;
function sr() {
  if (vr) return Je;
  vr = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return Je = e, Je;
}
var Xe, Sr;
function Vr() {
  return Sr || (Sr = 1, Xe = Function.call.bind(Object.prototype.hasOwnProperty)), Xe;
}
var Ze, Cr;
function ut() {
  if (Cr) return Ze;
  Cr = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var r = sr(), t = {}, n = Vr();
    e = function(a) {
      var s = "Warning: " + a;
      typeof console < "u" && console.error(s);
      try {
        throw new Error(s);
      } catch {
      }
    };
  }
  function o(a, s, c, l, f) {
    if (process.env.NODE_ENV !== "production") {
      for (var h in a)
        if (n(a, h)) {
          var d;
          try {
            if (typeof a[h] != "function") {
              var p = Error(
                (l || "React class") + ": " + c + " type `" + h + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof a[h] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw p.name = "Invariant Violation", p;
            }
            d = a[h](s, h, l, c, null, r);
          } catch (T) {
            d = T;
          }
          if (d && !(d instanceof Error) && e(
            (l || "React class") + ": type specification of " + c + " `" + h + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof d + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), d instanceof Error && !(d.message in t)) {
            t[d.message] = !0;
            var S = f ? f() : "";
            e(
              "Failed " + c + " type: " + d.message + (S ?? "")
            );
          }
        }
    }
  }
  return o.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (t = {});
  }, Ze = o, Ze;
}
var er, Tr;
function lt() {
  if (Tr) return er;
  Tr = 1;
  var e = Ur(), r = ct(), t = sr(), n = Vr(), o = ut(), a = function() {
  };
  process.env.NODE_ENV !== "production" && (a = function(c) {
    var l = "Warning: " + c;
    typeof console < "u" && console.error(l);
    try {
      throw new Error(l);
    } catch {
    }
  });
  function s() {
    return null;
  }
  return er = function(c, l) {
    var f = typeof Symbol == "function" && Symbol.iterator, h = "@@iterator";
    function d(m) {
      var v = m && (f && m[f] || m[h]);
      if (typeof v == "function")
        return v;
    }
    var p = "<<anonymous>>", S = {
      array: $("array"),
      bigint: $("bigint"),
      bool: $("boolean"),
      func: $("function"),
      number: $("number"),
      object: $("object"),
      string: $("string"),
      symbol: $("symbol"),
      any: Y(),
      arrayOf: E,
      element: w(),
      elementType: g(),
      instanceOf: K,
      node: i(),
      objectOf: ie,
      oneOf: X,
      oneOfType: q,
      shape: j,
      exact: V
    };
    function T(m, v) {
      return m === v ? m !== 0 || 1 / m === 1 / v : m !== m && v !== v;
    }
    function b(m, v) {
      this.message = m, this.data = v && typeof v == "object" ? v : {}, this.stack = "";
    }
    b.prototype = Error.prototype;
    function x(m) {
      if (process.env.NODE_ENV !== "production")
        var v = {}, P = 0;
      function _(R, A, k, I, D, B, H) {
        if (I = I || p, B = B || k, H !== t) {
          if (l) {
            var y = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw y.name = "Invariant Violation", y;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var ne = I + ":" + k;
            !v[ne] && // Avoid spamming the console because they are often not actionable except for lib authors
            P < 3 && (a(
              "You are manually calling a React.PropTypes validation function for the `" + B + "` prop on `" + I + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), v[ne] = !0, P++);
          }
        }
        return A[k] == null ? R ? A[k] === null ? new b("The " + D + " `" + B + "` is marked as required " + ("in `" + I + "`, but its value is `null`.")) : new b("The " + D + " `" + B + "` is marked as required in " + ("`" + I + "`, but its value is `undefined`.")) : null : m(A, k, I, D, B);
      }
      var O = _.bind(null, !1);
      return O.isRequired = _.bind(null, !0), O;
    }
    function $(m) {
      function v(P, _, O, R, A, k) {
        var I = P[_], D = te(I);
        if (D !== m) {
          var B = me(I);
          return new b(
            "Invalid " + R + " `" + A + "` of type " + ("`" + B + "` supplied to `" + O + "`, expected ") + ("`" + m + "`."),
            { expectedType: m }
          );
        }
        return null;
      }
      return x(v);
    }
    function Y() {
      return x(s);
    }
    function E(m) {
      function v(P, _, O, R, A) {
        if (typeof m != "function")
          return new b("Property `" + A + "` of component `" + O + "` has invalid PropType notation inside arrayOf.");
        var k = P[_];
        if (!Array.isArray(k)) {
          var I = te(k);
          return new b("Invalid " + R + " `" + A + "` of type " + ("`" + I + "` supplied to `" + O + "`, expected an array."));
        }
        for (var D = 0; D < k.length; D++) {
          var B = m(k, D, O, R, A + "[" + D + "]", t);
          if (B instanceof Error)
            return B;
        }
        return null;
      }
      return x(v);
    }
    function w() {
      function m(v, P, _, O, R) {
        var A = v[P];
        if (!c(A)) {
          var k = te(A);
          return new b("Invalid " + O + " `" + R + "` of type " + ("`" + k + "` supplied to `" + _ + "`, expected a single ReactElement."));
        }
        return null;
      }
      return x(m);
    }
    function g() {
      function m(v, P, _, O, R) {
        var A = v[P];
        if (!e.isValidElementType(A)) {
          var k = te(A);
          return new b("Invalid " + O + " `" + R + "` of type " + ("`" + k + "` supplied to `" + _ + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return x(m);
    }
    function K(m) {
      function v(P, _, O, R, A) {
        if (!(P[_] instanceof m)) {
          var k = m.name || p, I = He(P[_]);
          return new b("Invalid " + R + " `" + A + "` of type " + ("`" + I + "` supplied to `" + O + "`, expected ") + ("instance of `" + k + "`."));
        }
        return null;
      }
      return x(v);
    }
    function X(m) {
      if (!Array.isArray(m))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? a(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : a("Invalid argument supplied to oneOf, expected an array.")), s;
      function v(P, _, O, R, A) {
        for (var k = P[_], I = 0; I < m.length; I++)
          if (T(k, m[I]))
            return null;
        var D = JSON.stringify(m, function(H, y) {
          var ne = me(y);
          return ne === "symbol" ? String(y) : y;
        });
        return new b("Invalid " + R + " `" + A + "` of value `" + String(k) + "` " + ("supplied to `" + O + "`, expected one of " + D + "."));
      }
      return x(v);
    }
    function ie(m) {
      function v(P, _, O, R, A) {
        if (typeof m != "function")
          return new b("Property `" + A + "` of component `" + O + "` has invalid PropType notation inside objectOf.");
        var k = P[_], I = te(k);
        if (I !== "object")
          return new b("Invalid " + R + " `" + A + "` of type " + ("`" + I + "` supplied to `" + O + "`, expected an object."));
        for (var D in k)
          if (n(k, D)) {
            var B = m(k, D, O, R, A + "." + D, t);
            if (B instanceof Error)
              return B;
          }
        return null;
      }
      return x(v);
    }
    function q(m) {
      if (!Array.isArray(m))
        return process.env.NODE_ENV !== "production" && a("Invalid argument supplied to oneOfType, expected an instance of array."), s;
      for (var v = 0; v < m.length; v++) {
        var P = m[v];
        if (typeof P != "function")
          return a(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + _e(P) + " at index " + v + "."
          ), s;
      }
      function _(O, R, A, k, I) {
        for (var D = [], B = 0; B < m.length; B++) {
          var H = m[B], y = H(O, R, A, k, I, t);
          if (y == null)
            return null;
          y.data && n(y.data, "expectedType") && D.push(y.data.expectedType);
        }
        var ne = D.length > 0 ? ", expected one of type [" + D.join(", ") + "]" : "";
        return new b("Invalid " + k + " `" + I + "` supplied to " + ("`" + A + "`" + ne + "."));
      }
      return x(_);
    }
    function i() {
      function m(v, P, _, O, R) {
        return re(v[P]) ? null : new b("Invalid " + O + " `" + R + "` supplied to " + ("`" + _ + "`, expected a ReactNode."));
      }
      return x(m);
    }
    function C(m, v, P, _, O) {
      return new b(
        (m || "React class") + ": " + v + " type `" + P + "." + _ + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + O + "`."
      );
    }
    function j(m) {
      function v(P, _, O, R, A) {
        var k = P[_], I = te(k);
        if (I !== "object")
          return new b("Invalid " + R + " `" + A + "` of type `" + I + "` " + ("supplied to `" + O + "`, expected `object`."));
        for (var D in m) {
          var B = m[D];
          if (typeof B != "function")
            return C(O, R, A, D, me(B));
          var H = B(k, D, O, R, A + "." + D, t);
          if (H)
            return H;
        }
        return null;
      }
      return x(v);
    }
    function V(m) {
      function v(P, _, O, R, A) {
        var k = P[_], I = te(k);
        if (I !== "object")
          return new b("Invalid " + R + " `" + A + "` of type `" + I + "` " + ("supplied to `" + O + "`, expected `object`."));
        var D = r({}, P[_], m);
        for (var B in D) {
          var H = m[B];
          if (n(m, B) && typeof H != "function")
            return C(O, R, A, B, me(H));
          if (!H)
            return new b(
              "Invalid " + R + " `" + A + "` key `" + B + "` supplied to `" + O + "`.\nBad object: " + JSON.stringify(P[_], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(m), null, "  ")
            );
          var y = H(k, B, O, R, A + "." + B, t);
          if (y)
            return y;
        }
        return null;
      }
      return x(v);
    }
    function re(m) {
      switch (typeof m) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !m;
        case "object":
          if (Array.isArray(m))
            return m.every(re);
          if (m === null || c(m))
            return !0;
          var v = d(m);
          if (v) {
            var P = v.call(m), _;
            if (v !== m.entries) {
              for (; !(_ = P.next()).done; )
                if (!re(_.value))
                  return !1;
            } else
              for (; !(_ = P.next()).done; ) {
                var O = _.value;
                if (O && !re(O[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function ue(m, v) {
      return m === "symbol" ? !0 : v ? v["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && v instanceof Symbol : !1;
    }
    function te(m) {
      var v = typeof m;
      return Array.isArray(m) ? "array" : m instanceof RegExp ? "object" : ue(v, m) ? "symbol" : v;
    }
    function me(m) {
      if (typeof m > "u" || m === null)
        return "" + m;
      var v = te(m);
      if (v === "object") {
        if (m instanceof Date)
          return "date";
        if (m instanceof RegExp)
          return "regexp";
      }
      return v;
    }
    function _e(m) {
      var v = me(m);
      switch (v) {
        case "array":
        case "object":
          return "an " + v;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + v;
        default:
          return v;
      }
    }
    function He(m) {
      return !m.constructor || !m.constructor.name ? p : m.constructor.name;
    }
    return S.checkPropTypes = o, S.resetWarningCache = o.resetWarningCache, S.PropTypes = S, S;
  }, er;
}
var rr, wr;
function ft() {
  if (wr) return rr;
  wr = 1;
  var e = sr();
  function r() {
  }
  function t() {
  }
  return t.resetWarningCache = r, rr = function() {
    function n(s, c, l, f, h, d) {
      if (d !== e) {
        var p = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw p.name = "Invariant Violation", p;
      }
    }
    n.isRequired = n;
    function o() {
      return n;
    }
    var a = {
      array: n,
      bigint: n,
      bool: n,
      func: n,
      number: n,
      object: n,
      string: n,
      symbol: n,
      any: n,
      arrayOf: o,
      element: n,
      elementType: n,
      instanceOf: o,
      node: n,
      objectOf: o,
      oneOf: o,
      oneOfType: o,
      shape: o,
      exact: o,
      checkPropTypes: t,
      resetWarningCache: r
    };
    return a.PropTypes = a, a;
  }, rr;
}
if (process.env.NODE_ENV !== "production") {
  var dt = Ur(), pt = !0;
  ir.exports = lt()(dt.isElement, pt);
} else
  ir.exports = ft()();
var mt = ir.exports;
const Ce = /* @__PURE__ */ it(mt);
function Lr(e) {
  var r, t, n = "";
  if (typeof e == "string" || typeof e == "number") n += e;
  else if (typeof e == "object") if (Array.isArray(e)) {
    var o = e.length;
    for (r = 0; r < o; r++) e[r] && (t = Lr(e[r])) && (n && (n += " "), n += t);
  } else for (t in e) e[t] && (n && (n += " "), n += t);
  return n;
}
function bo() {
  for (var e, r, t = 0, n = "", o = arguments.length; t < o; t++) (e = arguments[t]) && (r = Lr(e)) && (n && (n += " "), n += r);
  return n;
}
function de(e, ...r) {
  const t = new URL(`https://mui.com/production-error/?code=${e}`);
  return r.forEach((n) => t.searchParams.append("args[]", n)), `Minified MUI error #${e}; visit ${t} for the full message.`;
}
function zr(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : de(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function le(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const r = Object.getPrototypeOf(e);
  return (r === null || r === Object.prototype || Object.getPrototypeOf(r) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function Gr(e) {
  if (/* @__PURE__ */ Fr.isValidElement(e) || !le(e))
    return e;
  const r = {};
  return Object.keys(e).forEach((t) => {
    r[t] = Gr(e[t]);
  }), r;
}
function Q(e, r, t = {
  clone: !0
}) {
  const n = t.clone ? {
    ...e
  } : e;
  return le(e) && le(r) && Object.keys(r).forEach((o) => {
    /* @__PURE__ */ Fr.isValidElement(r[o]) ? n[o] = r[o] : le(r[o]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, o) && le(e[o]) ? n[o] = Q(e[o], r[o], t) : t.clone ? n[o] = le(r[o]) ? Gr(r[o]) : r[o] : n[o] = r[o];
  }), n;
}
function xe(e, r) {
  return r ? Q(e, r, {
    clone: !1
    // No need to clone deep, it's way faster.
  }) : e;
}
const pe = process.env.NODE_ENV !== "production" ? Ce.oneOfType([Ce.number, Ce.string, Ce.object, Ce.array]) : {};
function gt(e, r) {
  if (!e.containerQueries)
    return r;
  const t = Object.keys(r).filter((n) => n.startsWith("@container")).sort((n, o) => {
    var s, c;
    const a = /min-width:\s*([0-9.]+)/;
    return +(((s = n.match(a)) == null ? void 0 : s[1]) || 0) - +(((c = o.match(a)) == null ? void 0 : c[1]) || 0);
  });
  return t.length ? t.reduce((n, o) => {
    const a = r[o];
    return delete n[o], n[o] = a, n;
  }, {
    ...r
  }) : r;
}
function ht(e, r) {
  return r === "@" || r.startsWith("@") && (e.some((t) => r.startsWith(`@${t}`)) || !!r.match(/^@\d/));
}
function yt(e, r) {
  const t = r.match(/^@([^/]+)?\/?(.+)?$/);
  if (!t) {
    if (process.env.NODE_ENV !== "production")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The provided shorthand ${`(${r})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.
For example, \`@sm\` or \`@600\` or \`@40rem/sidebar\`.` : de(18, `(${r})`));
    return null;
  }
  const [, n, o] = t, a = Number.isNaN(+n) ? n || 0 : +n;
  return e.containerQueries(o).up(a);
}
function bt(e) {
  const r = (a, s) => a.replace("@media", s ? `@container ${s}` : "@container");
  function t(a, s) {
    a.up = (...c) => r(e.breakpoints.up(...c), s), a.down = (...c) => r(e.breakpoints.down(...c), s), a.between = (...c) => r(e.breakpoints.between(...c), s), a.only = (...c) => r(e.breakpoints.only(...c), s), a.not = (...c) => {
      const l = r(e.breakpoints.not(...c), s);
      return l.includes("not all and") ? l.replace("not all and ", "").replace("min-width:", "width<").replace("max-width:", "width>").replace("and", "or") : l;
    };
  }
  const n = {}, o = (a) => (t(n, a), n);
  return t(o), {
    ...e,
    containerQueries: o
  };
}
const Ne = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
}, Er = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${Ne[e]}px)`
}, vt = {
  containerQueries: (e) => ({
    up: (r) => {
      let t = typeof r == "number" ? r : Ne[r] || r;
      return typeof t == "number" && (t = `${t}px`), e ? `@container ${e} (min-width:${t})` : `@container (min-width:${t})`;
    }
  })
};
function se(e, r, t) {
  const n = e.theme || {};
  if (Array.isArray(r)) {
    const a = n.breakpoints || Er;
    return r.reduce((s, c, l) => (s[a.up(a.keys[l])] = t(r[l]), s), {});
  }
  if (typeof r == "object") {
    const a = n.breakpoints || Er;
    return Object.keys(r).reduce((s, c) => {
      if (ht(a.keys, c)) {
        const l = yt(n.containerQueries ? n : vt, c);
        l && (s[l] = t(r[c], c));
      } else if (Object.keys(a.values || Ne).includes(c)) {
        const l = a.up(c);
        s[l] = t(r[c], c);
      } else {
        const l = c;
        s[l] = r[l];
      }
      return s;
    }, {});
  }
  return t(r);
}
function Yr(e = {}) {
  var t;
  return ((t = e.keys) == null ? void 0 : t.reduce((n, o) => {
    const a = e.up(o);
    return n[a] = {}, n;
  }, {})) || {};
}
function Kr(e, r) {
  return e.reduce((t, n) => {
    const o = t[n];
    return (!o || Object.keys(o).length === 0) && delete t[n], t;
  }, r);
}
function vo(e, ...r) {
  const t = Yr(e), n = [t, ...r].reduce((o, a) => Q(o, a), {});
  return Kr(Object.keys(t), n);
}
function St(e, r) {
  if (typeof e != "object")
    return {};
  const t = {}, n = Object.keys(r);
  return Array.isArray(e) ? n.forEach((o, a) => {
    a < e.length && (t[o] = !0);
  }) : n.forEach((o) => {
    e[o] != null && (t[o] = !0);
  }), t;
}
function So({
  values: e,
  breakpoints: r,
  base: t
}) {
  const n = t || St(e, r), o = Object.keys(n);
  if (o.length === 0)
    return e;
  let a;
  return o.reduce((s, c, l) => (Array.isArray(e) ? (s[c] = e[l] != null ? e[l] : e[a], a = l) : typeof e == "object" ? (s[c] = e[c] != null ? e[c] : e[a], a = c) : s[c] = e, s), {});
}
function De(e, r, t = !0) {
  if (!r || typeof r != "string")
    return null;
  if (e && e.vars && t) {
    const n = `vars.${r}`.split(".").reduce((o, a) => o && o[a] ? o[a] : null, e);
    if (n != null)
      return n;
  }
  return r.split(".").reduce((n, o) => n && n[o] != null ? n[o] : null, e);
}
function Be(e, r, t, n = t) {
  let o;
  return typeof e == "function" ? o = e(t) : Array.isArray(e) ? o = e[t] || n : o = De(e, t) || n, r && (o = r(o, n, e)), o;
}
function G(e) {
  const {
    prop: r,
    cssProperty: t = e.prop,
    themeKey: n,
    transform: o
  } = e, a = (s) => {
    if (s[r] == null)
      return null;
    const c = s[r], l = s.theme, f = De(l, n) || {};
    return se(s, c, (d) => {
      let p = Be(f, o, d);
      return d === p && typeof d == "string" && (p = Be(f, o, `${r}${d === "default" ? "" : zr(d)}`, d)), t === !1 ? p : {
        [t]: p
      };
    });
  };
  return a.propTypes = process.env.NODE_ENV !== "production" ? {
    [r]: pe
  } : {}, a.filterProps = [r], a;
}
function Ct(e) {
  const r = {};
  return (t) => (r[t] === void 0 && (r[t] = e(t)), r[t]);
}
const Tt = {
  m: "margin",
  p: "padding"
}, wt = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, xr = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, Et = Ct((e) => {
  if (e.length > 2)
    if (xr[e])
      e = xr[e];
    else
      return [e];
  const [r, t] = e.split(""), n = Tt[r], o = wt[t] || "";
  return Array.isArray(o) ? o.map((a) => n + a) : [n + o];
}), We = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], Fe = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], xt = [...We, ...Fe];
function $e(e, r, t, n) {
  const o = De(e, r, !0) ?? t;
  return typeof o == "number" || typeof o == "string" ? (a) => typeof a == "string" ? a : (process.env.NODE_ENV !== "production" && typeof a != "number" && console.error(`MUI: Expected ${n} argument to be a number or a string, got ${a}.`), typeof o == "string" ? `calc(${a} * ${o})` : o * a) : Array.isArray(o) ? (a) => {
    if (typeof a == "string")
      return a;
    const s = Math.abs(a);
    process.env.NODE_ENV !== "production" && (Number.isInteger(s) ? s > o.length - 1 && console.error([`MUI: The value provided (${s}) overflows.`, `The supported values are: ${JSON.stringify(o)}.`, `${s} > ${o.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${r}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${r}\` as a number.`].join(`
`)));
    const c = o[s];
    return a >= 0 ? c : typeof c == "number" ? -c : `-${c}`;
  } : typeof o == "function" ? o : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${r}\` value (${o}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function cr(e) {
  return $e(e, "spacing", 8, "spacing");
}
function Ae(e, r) {
  return typeof r == "string" || r == null ? r : e(r);
}
function Ot(e, r) {
  return (t) => e.reduce((n, o) => (n[o] = Ae(r, t), n), {});
}
function $t(e, r, t, n) {
  if (!r.includes(t))
    return null;
  const o = Et(t), a = Ot(o, n), s = e[t];
  return se(e, s, a);
}
function qr(e, r) {
  const t = cr(e.theme);
  return Object.keys(e).map((n) => $t(e, r, n, t)).reduce(xe, {});
}
function L(e) {
  return qr(e, We);
}
L.propTypes = process.env.NODE_ENV !== "production" ? We.reduce((e, r) => (e[r] = pe, e), {}) : {};
L.filterProps = We;
function z(e) {
  return qr(e, Fe);
}
z.propTypes = process.env.NODE_ENV !== "production" ? Fe.reduce((e, r) => (e[r] = pe, e), {}) : {};
z.filterProps = Fe;
process.env.NODE_ENV !== "production" && xt.reduce((e, r) => (e[r] = pe, e), {});
function Ue(...e) {
  const r = e.reduce((n, o) => (o.filterProps.forEach((a) => {
    n[a] = o;
  }), n), {}), t = (n) => Object.keys(n).reduce((o, a) => r[a] ? xe(o, r[a](n)) : o, {});
  return t.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((n, o) => Object.assign(n, o.propTypes), {}) : {}, t.filterProps = e.reduce((n, o) => n.concat(o.filterProps), []), t;
}
function Z(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function ee(e, r) {
  return G({
    prop: e,
    themeKey: "borders",
    transform: r
  });
}
const At = ee("border", Z), _t = ee("borderTop", Z), kt = ee("borderRight", Z), Pt = ee("borderBottom", Z), Rt = ee("borderLeft", Z), It = ee("borderColor"), Bt = ee("borderTopColor"), jt = ee("borderRightColor"), Mt = ee("borderBottomColor"), Nt = ee("borderLeftColor"), Dt = ee("outline", Z), Wt = ee("outlineColor"), Ve = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const r = $e(e.theme, "shape.borderRadius", 4, "borderRadius"), t = (n) => ({
      borderRadius: Ae(r, n)
    });
    return se(e, e.borderRadius, t);
  }
  return null;
};
Ve.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: pe
} : {};
Ve.filterProps = ["borderRadius"];
Ue(At, _t, kt, Pt, Rt, It, Bt, jt, Mt, Nt, Ve, Dt, Wt);
const Le = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const r = $e(e.theme, "spacing", 8, "gap"), t = (n) => ({
      gap: Ae(r, n)
    });
    return se(e, e.gap, t);
  }
  return null;
};
Le.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: pe
} : {};
Le.filterProps = ["gap"];
const ze = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const r = $e(e.theme, "spacing", 8, "columnGap"), t = (n) => ({
      columnGap: Ae(r, n)
    });
    return se(e, e.columnGap, t);
  }
  return null;
};
ze.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: pe
} : {};
ze.filterProps = ["columnGap"];
const Ge = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const r = $e(e.theme, "spacing", 8, "rowGap"), t = (n) => ({
      rowGap: Ae(r, n)
    });
    return se(e, e.rowGap, t);
  }
  return null;
};
Ge.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: pe
} : {};
Ge.filterProps = ["rowGap"];
const Ft = G({
  prop: "gridColumn"
}), Ut = G({
  prop: "gridRow"
}), Vt = G({
  prop: "gridAutoFlow"
}), Lt = G({
  prop: "gridAutoColumns"
}), zt = G({
  prop: "gridAutoRows"
}), Gt = G({
  prop: "gridTemplateColumns"
}), Yt = G({
  prop: "gridTemplateRows"
}), Kt = G({
  prop: "gridTemplateAreas"
}), qt = G({
  prop: "gridArea"
});
Ue(Le, ze, Ge, Ft, Ut, Vt, Lt, zt, Gt, Yt, Kt, qt);
function Se(e, r) {
  return r === "grey" ? r : e;
}
const Ht = G({
  prop: "color",
  themeKey: "palette",
  transform: Se
}), Qt = G({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: Se
}), Jt = G({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: Se
});
Ue(Ht, Qt, Jt);
function J(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const Xt = G({
  prop: "width",
  transform: J
}), ur = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const r = (t) => {
      var o, a, s, c, l;
      const n = ((s = (a = (o = e.theme) == null ? void 0 : o.breakpoints) == null ? void 0 : a.values) == null ? void 0 : s[t]) || Ne[t];
      return n ? ((l = (c = e.theme) == null ? void 0 : c.breakpoints) == null ? void 0 : l.unit) !== "px" ? {
        maxWidth: `${n}${e.theme.breakpoints.unit}`
      } : {
        maxWidth: n
      } : {
        maxWidth: J(t)
      };
    };
    return se(e, e.maxWidth, r);
  }
  return null;
};
ur.filterProps = ["maxWidth"];
const Zt = G({
  prop: "minWidth",
  transform: J
}), en = G({
  prop: "height",
  transform: J
}), rn = G({
  prop: "maxHeight",
  transform: J
}), tn = G({
  prop: "minHeight",
  transform: J
});
G({
  prop: "size",
  cssProperty: "width",
  transform: J
});
G({
  prop: "size",
  cssProperty: "height",
  transform: J
});
const nn = G({
  prop: "boxSizing"
});
Ue(Xt, ur, Zt, en, rn, tn, nn);
const Ye = {
  // borders
  border: {
    themeKey: "borders",
    transform: Z
  },
  borderTop: {
    themeKey: "borders",
    transform: Z
  },
  borderRight: {
    themeKey: "borders",
    transform: Z
  },
  borderBottom: {
    themeKey: "borders",
    transform: Z
  },
  borderLeft: {
    themeKey: "borders",
    transform: Z
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: Z
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: Ve
  },
  // palette
  color: {
    themeKey: "palette",
    transform: Se
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: Se
  },
  backgroundColor: {
    themeKey: "palette",
    transform: Se
  },
  // spacing
  p: {
    style: z
  },
  pt: {
    style: z
  },
  pr: {
    style: z
  },
  pb: {
    style: z
  },
  pl: {
    style: z
  },
  px: {
    style: z
  },
  py: {
    style: z
  },
  padding: {
    style: z
  },
  paddingTop: {
    style: z
  },
  paddingRight: {
    style: z
  },
  paddingBottom: {
    style: z
  },
  paddingLeft: {
    style: z
  },
  paddingX: {
    style: z
  },
  paddingY: {
    style: z
  },
  paddingInline: {
    style: z
  },
  paddingInlineStart: {
    style: z
  },
  paddingInlineEnd: {
    style: z
  },
  paddingBlock: {
    style: z
  },
  paddingBlockStart: {
    style: z
  },
  paddingBlockEnd: {
    style: z
  },
  m: {
    style: L
  },
  mt: {
    style: L
  },
  mr: {
    style: L
  },
  mb: {
    style: L
  },
  ml: {
    style: L
  },
  mx: {
    style: L
  },
  my: {
    style: L
  },
  margin: {
    style: L
  },
  marginTop: {
    style: L
  },
  marginRight: {
    style: L
  },
  marginBottom: {
    style: L
  },
  marginLeft: {
    style: L
  },
  marginX: {
    style: L
  },
  marginY: {
    style: L
  },
  marginInline: {
    style: L
  },
  marginInlineStart: {
    style: L
  },
  marginInlineEnd: {
    style: L
  },
  marginBlock: {
    style: L
  },
  marginBlockStart: {
    style: L
  },
  marginBlockEnd: {
    style: L
  },
  // display
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({
      "@media print": {
        display: e
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: Le
  },
  rowGap: {
    style: Ge
  },
  columnGap: {
    style: ze
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: J
  },
  maxWidth: {
    style: ur
  },
  minWidth: {
    transform: J
  },
  height: {
    transform: J
  },
  maxHeight: {
    transform: J
  },
  minHeight: {
    transform: J
  },
  boxSizing: {},
  // typography
  font: {
    themeKey: "font"
  },
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: !1,
    themeKey: "typography"
  }
};
function on(...e) {
  const r = e.reduce((n, o) => n.concat(Object.keys(o)), []), t = new Set(r);
  return e.every((n) => t.size === Object.keys(n).length);
}
function an(e, r) {
  return typeof e == "function" ? e(r) : e;
}
function sn() {
  function e(t, n, o, a) {
    const s = {
      [t]: n,
      theme: o
    }, c = a[t];
    if (!c)
      return {
        [t]: n
      };
    const {
      cssProperty: l = t,
      themeKey: f,
      transform: h,
      style: d
    } = c;
    if (n == null)
      return null;
    if (f === "typography" && n === "inherit")
      return {
        [t]: n
      };
    const p = De(o, f) || {};
    return d ? d(s) : se(s, n, (T) => {
      let b = Be(p, h, T);
      return T === b && typeof T == "string" && (b = Be(p, h, `${t}${T === "default" ? "" : zr(T)}`, T)), l === !1 ? b : {
        [l]: b
      };
    });
  }
  function r(t) {
    const {
      sx: n,
      theme: o = {}
    } = t || {};
    if (!n)
      return null;
    const a = o.unstable_sxConfig ?? Ye;
    function s(c) {
      let l = c;
      if (typeof c == "function")
        l = c(o);
      else if (typeof c != "object")
        return c;
      if (!l)
        return null;
      const f = Yr(o.breakpoints), h = Object.keys(f);
      let d = f;
      return Object.keys(l).forEach((p) => {
        const S = an(l[p], o);
        if (S != null)
          if (typeof S == "object")
            if (a[p])
              d = xe(d, e(p, S, o, a));
            else {
              const T = se({
                theme: o
              }, S, (b) => ({
                [p]: b
              }));
              on(T, S) ? d[p] = r({
                sx: S,
                theme: o
              }) : d = xe(d, T);
            }
          else
            d = xe(d, e(p, S, o, a));
      }), gt(o, Kr(h, d));
    }
    return Array.isArray(n) ? n.map(s) : s(n);
  }
  return r;
}
const Ke = sn();
Ke.filterProps = ["sx"];
function cn(e) {
  for (var r = 0, t, n = 0, o = e.length; o >= 4; ++n, o -= 4)
    t = e.charCodeAt(n) & 255 | (e.charCodeAt(++n) & 255) << 8 | (e.charCodeAt(++n) & 255) << 16 | (e.charCodeAt(++n) & 255) << 24, t = /* Math.imul(k, m): */
    (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16), t ^= /* k >>> r: */
    t >>> 24, r = /* Math.imul(k, m): */
    (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16) ^ /* Math.imul(h, m): */
    (r & 65535) * 1540483477 + ((r >>> 16) * 59797 << 16);
  switch (o) {
    case 3:
      r ^= (e.charCodeAt(n + 2) & 255) << 16;
    case 2:
      r ^= (e.charCodeAt(n + 1) & 255) << 8;
    case 1:
      r ^= e.charCodeAt(n) & 255, r = /* Math.imul(h, m): */
      (r & 65535) * 1540483477 + ((r >>> 16) * 59797 << 16);
  }
  return r ^= r >>> 13, r = /* Math.imul(h, m): */
  (r & 65535) * 1540483477 + ((r >>> 16) * 59797 << 16), ((r ^ r >>> 15) >>> 0).toString(36);
}
var un = {
  animationIterationCount: 1,
  aspectRatio: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  scale: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};
function ln(e) {
  var r = /* @__PURE__ */ Object.create(null);
  return function(t) {
    return r[t] === void 0 && (r[t] = e(t)), r[t];
  };
}
var fn = !1, dn = /[A-Z]|^ms/g, pn = /_EMO_([^_]+?)_([^]*?)_EMO_/g, Hr = function(r) {
  return r.charCodeAt(1) === 45;
}, Or = function(r) {
  return r != null && typeof r != "boolean";
}, tr = /* @__PURE__ */ ln(function(e) {
  return Hr(e) ? e : e.replace(dn, "-$&").toLowerCase();
}), $r = function(r, t) {
  switch (r) {
    case "animation":
    case "animationName":
      if (typeof t == "string")
        return t.replace(pn, function(n, o, a) {
          return fe = {
            name: o,
            styles: a,
            next: fe
          }, o;
        });
  }
  return un[r] !== 1 && !Hr(r) && typeof t == "number" && t !== 0 ? t + "px" : t;
}, mn = "Component selectors can only be used in conjunction with @emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware compiler transform.";
function je(e, r, t) {
  if (t == null)
    return "";
  var n = t;
  if (n.__emotion_styles !== void 0)
    return n;
  switch (typeof t) {
    case "boolean":
      return "";
    case "object": {
      var o = t;
      if (o.anim === 1)
        return fe = {
          name: o.name,
          styles: o.styles,
          next: fe
        }, o.name;
      var a = t;
      if (a.styles !== void 0) {
        var s = a.next;
        if (s !== void 0)
          for (; s !== void 0; )
            fe = {
              name: s.name,
              styles: s.styles,
              next: fe
            }, s = s.next;
        var c = a.styles + ";";
        return c;
      }
      return gn(e, r, t);
    }
  }
  var l = t;
  return l;
}
function gn(e, r, t) {
  var n = "";
  if (Array.isArray(t))
    for (var o = 0; o < t.length; o++)
      n += je(e, r, t[o]) + ";";
  else
    for (var a in t) {
      var s = t[a];
      if (typeof s != "object") {
        var c = s;
        Or(c) && (n += tr(a) + ":" + $r(a, c) + ";");
      } else {
        if (a === "NO_COMPONENT_SELECTOR" && fn)
          throw new Error(mn);
        if (Array.isArray(s) && typeof s[0] == "string" && r == null)
          for (var l = 0; l < s.length; l++)
            Or(s[l]) && (n += tr(a) + ":" + $r(a, s[l]) + ";");
        else {
          var f = je(e, r, s);
          switch (a) {
            case "animation":
            case "animationName": {
              n += tr(a) + ":" + f + ";";
              break;
            }
            default:
              n += a + "{" + f + "}";
          }
        }
      }
    }
  return n;
}
var Ar = /label:\s*([^\s;{]+)\s*(;|$)/g, fe;
function hn(e, r, t) {
  if (e.length === 1 && typeof e[0] == "object" && e[0] !== null && e[0].styles !== void 0)
    return e[0];
  var n = !0, o = "";
  fe = void 0;
  var a = e[0];
  if (a == null || a.raw === void 0)
    n = !1, o += je(t, r, a);
  else {
    var s = a;
    o += s[0];
  }
  for (var c = 1; c < e.length; c++)
    if (o += je(t, r, e[c]), n) {
      var l = a;
      o += l[c];
    }
  Ar.lastIndex = 0;
  for (var f = "", h; (h = Ar.exec(o)) !== null; )
    f += "-" + h[1];
  var d = cn(o) + f;
  return {
    name: d,
    styles: o,
    next: fe
  };
}
/**
 * @mui/styled-engine v6.1.8
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function Co(e, r) {
  const t = ot(e, r);
  return process.env.NODE_ENV !== "production" ? (...n) => {
    const o = typeof e == "string" ? `"${e}"` : "component";
    return n.length === 0 ? console.error([`MUI: Seems like you called \`styled(${o})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : n.some((a) => a === void 0) && console.error(`MUI: the styled(${o})(...args) API requires all its args to be defined.`), t(...n);
  } : t;
}
function To(e, r) {
  Array.isArray(e.__emotion_styles) && (e.__emotion_styles = r(e.__emotion_styles));
}
const _r = [];
function wo(e) {
  return _r[0] = e, hn(_r);
}
const yn = (e) => {
  const r = Object.keys(e).map((t) => ({
    key: t,
    val: e[t]
  })) || [];
  return r.sort((t, n) => t.val - n.val), r.reduce((t, n) => ({
    ...t,
    [n.key]: n.val
  }), {});
};
function bn(e) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: r = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: t = "px",
    step: n = 5,
    ...o
  } = e, a = yn(r), s = Object.keys(a);
  function c(p) {
    return `@media (min-width:${typeof r[p] == "number" ? r[p] : p}${t})`;
  }
  function l(p) {
    return `@media (max-width:${(typeof r[p] == "number" ? r[p] : p) - n / 100}${t})`;
  }
  function f(p, S) {
    const T = s.indexOf(S);
    return `@media (min-width:${typeof r[p] == "number" ? r[p] : p}${t}) and (max-width:${(T !== -1 && typeof r[s[T]] == "number" ? r[s[T]] : S) - n / 100}${t})`;
  }
  function h(p) {
    return s.indexOf(p) + 1 < s.length ? f(p, s[s.indexOf(p) + 1]) : c(p);
  }
  function d(p) {
    const S = s.indexOf(p);
    return S === 0 ? c(s[1]) : S === s.length - 1 ? l(s[S]) : f(p, s[s.indexOf(p) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: s,
    values: a,
    up: c,
    down: l,
    between: f,
    only: h,
    not: d,
    unit: t,
    ...o
  };
}
const vn = {
  borderRadius: 4
};
function Qr(e = 8, r = cr({
  spacing: e
})) {
  if (e.mui)
    return e;
  const t = (...n) => (process.env.NODE_ENV !== "production" && (n.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${n.length}`)), (n.length === 0 ? [1] : n).map((a) => {
    const s = r(a);
    return typeof s == "number" ? `${s}px` : s;
  }).join(" "));
  return t.mui = !0, t;
}
function Sn(e, r) {
  var n;
  const t = this;
  if (t.vars) {
    if (!((n = t.colorSchemes) != null && n[e]) || typeof t.getColorSchemeSelector != "function")
      return {};
    let o = t.getColorSchemeSelector(e);
    return o === "&" ? r : ((o.includes("data-") || o.includes(".")) && (o = `*:where(${o.replace(/\s*&$/, "")}) &`), {
      [o]: r
    });
  }
  return t.palette.mode === e ? r : {};
}
function Cn(e = {}, ...r) {
  const {
    breakpoints: t = {},
    palette: n = {},
    spacing: o,
    shape: a = {},
    ...s
  } = e, c = bn(t), l = Qr(o);
  let f = Q({
    breakpoints: c,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: {
      mode: "light",
      ...n
    },
    spacing: l,
    shape: {
      ...vn,
      ...a
    }
  }, s);
  return f = bt(f), f.applyStyles = Sn, f = r.reduce((h, d) => Q(h, d), f), f.unstable_sxConfig = {
    ...Ye,
    ...s == null ? void 0 : s.unstable_sxConfig
  }, f.unstable_sx = function(d) {
    return Ke({
      sx: d,
      theme: this
    });
  }, f;
}
const kr = (e) => e, Tn = () => {
  let e = kr;
  return {
    configure(r) {
      e = r;
    },
    generate(r) {
      return e(r);
    },
    reset() {
      e = kr;
    }
  };
}, wn = Tn(), En = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function Jr(e, r, t = "Mui") {
  const n = En[r];
  return n ? `${t}-${n}` : `${wn.generate(e)}-${r}`;
}
function Eo(e, r, t = "Mui") {
  const n = {};
  return r.forEach((o) => {
    n[o] = Jr(e, o, t);
  }), n;
}
function xn(e, r = Number.MIN_SAFE_INTEGER, t = Number.MAX_SAFE_INTEGER) {
  return Math.max(r, Math.min(e, t));
}
function lr(e, r = 0, t = 1) {
  return process.env.NODE_ENV !== "production" && (e < r || e > t) && console.error(`MUI: The value provided ${e} is out of range [${r}, ${t}].`), xn(e, r, t);
}
function On(e) {
  e = e.slice(1);
  const r = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let t = e.match(r);
  return t && t[0].length === 1 && (t = t.map((n) => n + n)), t ? `rgb${t.length === 4 ? "a" : ""}(${t.map((n, o) => o < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function $n(e) {
  const r = e.toString(16);
  return r.length === 1 ? `0${r}` : r;
}
function ce(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return ce(On(e));
  const r = e.indexOf("("), t = e.substring(0, r);
  if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(t))
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : de(9, e));
  let n = e.substring(r + 1, e.length - 1), o;
  if (t === "color") {
    if (n = n.split(" "), o = n.shift(), n.length === 4 && n[3].charAt(0) === "/" && (n[3] = n[3].slice(1)), !["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].includes(o))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${o}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : de(10, o));
  } else
    n = n.split(",");
  return n = n.map((a) => parseFloat(a)), {
    type: t,
    values: n,
    colorSpace: o
  };
}
const An = (e) => {
  const r = ce(e);
  return r.values.slice(0, 3).map((t, n) => r.type.includes("hsl") && n !== 0 ? `${t}%` : t).join(" ");
}, we = (e, r) => {
  try {
    return An(e);
  } catch {
    return r && process.env.NODE_ENV !== "production" && console.warn(r), e;
  }
};
function qe(e) {
  const {
    type: r,
    colorSpace: t
  } = e;
  let {
    values: n
  } = e;
  return r.includes("rgb") ? n = n.map((o, a) => a < 3 ? parseInt(o, 10) : o) : r.includes("hsl") && (n[1] = `${n[1]}%`, n[2] = `${n[2]}%`), r.includes("color") ? n = `${t} ${n.join(" ")}` : n = `${n.join(", ")}`, `${r}(${n})`;
}
function xo(e) {
  if (e.startsWith("#"))
    return e;
  const {
    values: r
  } = ce(e);
  return `#${r.map((t, n) => $n(n === 3 ? Math.round(255 * t) : t)).join("")}`;
}
function Xr(e) {
  e = ce(e);
  const {
    values: r
  } = e, t = r[0], n = r[1] / 100, o = r[2] / 100, a = n * Math.min(o, 1 - o), s = (f, h = (f + t / 30) % 12) => o - a * Math.max(Math.min(h - 3, 9 - h, 1), -1);
  let c = "rgb";
  const l = [Math.round(s(0) * 255), Math.round(s(8) * 255), Math.round(s(4) * 255)];
  return e.type === "hsla" && (c += "a", l.push(r[3])), qe({
    type: c,
    values: l
  });
}
function ar(e) {
  e = ce(e);
  let r = e.type === "hsl" || e.type === "hsla" ? ce(Xr(e)).values : e.values;
  return r = r.map((t) => (e.type !== "color" && (t /= 255), t <= 0.03928 ? t / 12.92 : ((t + 0.055) / 1.055) ** 2.4)), Number((0.2126 * r[0] + 0.7152 * r[1] + 0.0722 * r[2]).toFixed(3));
}
function Pr(e, r) {
  const t = ar(e), n = ar(r);
  return (Math.max(t, n) + 0.05) / (Math.min(t, n) + 0.05);
}
function _n(e, r) {
  return e = ce(e), r = lr(r), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${r}` : e.values[3] = r, qe(e);
}
function Re(e, r, t) {
  try {
    return _n(e, r);
  } catch {
    return e;
  }
}
function fr(e, r) {
  if (e = ce(e), r = lr(r), e.type.includes("hsl"))
    e.values[2] *= 1 - r;
  else if (e.type.includes("rgb") || e.type.includes("color"))
    for (let t = 0; t < 3; t += 1)
      e.values[t] *= 1 - r;
  return qe(e);
}
function W(e, r, t) {
  try {
    return fr(e, r);
  } catch {
    return e;
  }
}
function dr(e, r) {
  if (e = ce(e), r = lr(r), e.type.includes("hsl"))
    e.values[2] += (100 - e.values[2]) * r;
  else if (e.type.includes("rgb"))
    for (let t = 0; t < 3; t += 1)
      e.values[t] += (255 - e.values[t]) * r;
  else if (e.type.includes("color"))
    for (let t = 0; t < 3; t += 1)
      e.values[t] += (1 - e.values[t]) * r;
  return qe(e);
}
function F(e, r, t) {
  try {
    return dr(e, r);
  } catch {
    return e;
  }
}
function kn(e, r = 0.15) {
  return ar(e) > 0.5 ? fr(e, r) : dr(e, r);
}
function Ie(e, r, t) {
  try {
    return kn(e, r);
  } catch {
    return e;
  }
}
function Pn(e = "") {
  function r(...n) {
    if (!n.length)
      return "";
    const o = n[0];
    return typeof o == "string" && !o.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${o}${r(...n.slice(1))})` : `, ${o}`;
  }
  return (n, ...o) => `var(--${e ? `${e}-` : ""}${n}${r(...o)})`;
}
const Rr = (e, r, t, n = []) => {
  let o = e;
  r.forEach((a, s) => {
    s === r.length - 1 ? Array.isArray(o) ? o[Number(a)] = t : o && typeof o == "object" && (o[a] = t) : o && typeof o == "object" && (o[a] || (o[a] = n.includes(a) ? [] : {}), o = o[a]);
  });
}, Rn = (e, r, t) => {
  function n(o, a = [], s = []) {
    Object.entries(o).forEach(([c, l]) => {
      (!t || t && !t([...a, c])) && l != null && (typeof l == "object" && Object.keys(l).length > 0 ? n(l, [...a, c], Array.isArray(l) ? [...s, c] : s) : r([...a, c], l, s));
    });
  }
  n(e);
}, In = (e, r) => typeof r == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((n) => e.includes(n)) || e[e.length - 1].toLowerCase().includes("opacity") ? r : `${r}px` : r;
function nr(e, r) {
  const {
    prefix: t,
    shouldSkipGeneratingVar: n
  } = r || {}, o = {}, a = {}, s = {};
  return Rn(
    e,
    (c, l, f) => {
      if ((typeof l == "string" || typeof l == "number") && (!n || !n(c, l))) {
        const h = `--${t ? `${t}-` : ""}${c.join("-")}`, d = In(c, l);
        Object.assign(o, {
          [h]: d
        }), Rr(a, c, `var(${h})`, f), Rr(s, c, `var(${h}, ${d})`, f);
      }
    },
    (c) => c[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: o,
    vars: a,
    varsWithDefaults: s
  };
}
function Bn(e, r = {}) {
  const {
    getSelector: t = x,
    disableCssColorScheme: n,
    colorSchemeSelector: o
  } = r, {
    colorSchemes: a = {},
    components: s,
    defaultColorScheme: c = "light",
    ...l
  } = e, {
    vars: f,
    css: h,
    varsWithDefaults: d
  } = nr(l, r);
  let p = d;
  const S = {}, {
    [c]: T,
    ...b
  } = a;
  if (Object.entries(b || {}).forEach(([E, w]) => {
    const {
      vars: g,
      css: K,
      varsWithDefaults: X
    } = nr(w, r);
    p = Q(p, X), S[E] = {
      css: K,
      vars: g
    };
  }), T) {
    const {
      css: E,
      vars: w,
      varsWithDefaults: g
    } = nr(T, r);
    p = Q(p, g), S[c] = {
      css: E,
      vars: w
    };
  }
  function x(E, w) {
    var K, X;
    let g = o;
    if (o === "class" && (g = ".%s"), o === "data" && (g = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (g = `[${o}="%s"]`), E) {
      if (g === "media")
        return e.defaultColorScheme === E ? ":root" : {
          [`@media (prefers-color-scheme: ${((X = (K = a[E]) == null ? void 0 : K.palette) == null ? void 0 : X.mode) || E})`]: {
            ":root": w
          }
        };
      if (g)
        return e.defaultColorScheme === E ? `:root, ${g.replace("%s", String(E))}` : g.replace("%s", String(E));
    }
    return ":root";
  }
  return {
    vars: p,
    generateThemeVars: () => {
      let E = {
        ...f
      };
      return Object.entries(S).forEach(([, {
        vars: w
      }]) => {
        E = Q(E, w);
      }), E;
    },
    generateStyleSheets: () => {
      var ie, q;
      const E = [], w = e.defaultColorScheme || "light";
      function g(i, C) {
        Object.keys(C).length && E.push(typeof i == "string" ? {
          [i]: {
            ...C
          }
        } : i);
      }
      g(t(void 0, {
        ...h
      }), h);
      const {
        [w]: K,
        ...X
      } = S;
      if (K) {
        const {
          css: i
        } = K, C = (q = (ie = a[w]) == null ? void 0 : ie.palette) == null ? void 0 : q.mode, j = !n && C ? {
          colorScheme: C,
          ...i
        } : {
          ...i
        };
        g(t(w, {
          ...j
        }), j);
      }
      return Object.entries(X).forEach(([i, {
        css: C
      }]) => {
        var re, ue;
        const j = (ue = (re = a[i]) == null ? void 0 : re.palette) == null ? void 0 : ue.mode, V = !n && j ? {
          colorScheme: j,
          ...C
        } : {
          ...C
        };
        g(t(i, {
          ...V
        }), V);
      }), E;
    }
  };
}
function jn(e) {
  return function(t) {
    return e === "media" ? (process.env.NODE_ENV !== "production" && t !== "light" && t !== "dark" && console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${t}'.`), `@media (prefers-color-scheme: ${t})`) : e ? e.startsWith("data-") && !e.includes("%s") ? `[${e}="${t}"] &` : e === "class" ? `.${t} &` : e === "data" ? `[data-${t}] &` : `${e.replace("%s", t)} &` : "&";
  };
}
const Oe = {
  black: "#000",
  white: "#fff"
}, Mn = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
}, ge = {
  50: "#f3e5f5",
  100: "#e1bee7",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  600: "#8e24aa",
  700: "#7b1fa2",
  800: "#6a1b9a",
  900: "#4a148c",
  A100: "#ea80fc",
  A200: "#e040fb",
  A400: "#d500f9",
  A700: "#aa00ff"
}, he = {
  50: "#ffebee",
  100: "#ffcdd2",
  200: "#ef9a9a",
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  600: "#e53935",
  700: "#d32f2f",
  800: "#c62828",
  900: "#b71c1c",
  A100: "#ff8a80",
  A200: "#ff5252",
  A400: "#ff1744",
  A700: "#d50000"
}, Te = {
  50: "#fff3e0",
  100: "#ffe0b2",
  200: "#ffcc80",
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  600: "#fb8c00",
  700: "#f57c00",
  800: "#ef6c00",
  900: "#e65100",
  A100: "#ffd180",
  A200: "#ffab40",
  A400: "#ff9100",
  A700: "#ff6d00"
}, ye = {
  50: "#e3f2fd",
  100: "#bbdefb",
  200: "#90caf9",
  300: "#64b5f6",
  400: "#42a5f5",
  500: "#2196f3",
  600: "#1e88e5",
  700: "#1976d2",
  800: "#1565c0",
  900: "#0d47a1",
  A100: "#82b1ff",
  A200: "#448aff",
  A400: "#2979ff",
  A700: "#2962ff"
}, be = {
  50: "#e1f5fe",
  100: "#b3e5fc",
  200: "#81d4fa",
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  600: "#039be5",
  700: "#0288d1",
  800: "#0277bd",
  900: "#01579b",
  A100: "#80d8ff",
  A200: "#40c4ff",
  A400: "#00b0ff",
  A700: "#0091ea"
}, ve = {
  50: "#e8f5e9",
  100: "#c8e6c9",
  200: "#a5d6a7",
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  600: "#43a047",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20",
  A100: "#b9f6ca",
  A200: "#69f0ae",
  A400: "#00e676",
  A700: "#00c853"
};
function Zr() {
  return {
    // The colors used to style the text.
    text: {
      // The most important text.
      primary: "rgba(0, 0, 0, 0.87)",
      // Secondary text.
      secondary: "rgba(0, 0, 0, 0.6)",
      // Disabled text have even lower visual prominence.
      disabled: "rgba(0, 0, 0, 0.38)"
    },
    // The color used to divide different elements.
    divider: "rgba(0, 0, 0, 0.12)",
    // The background colors used to style the surfaces.
    // Consistency between these values is important.
    background: {
      paper: Oe.white,
      default: Oe.white
    },
    // The colors used to style the action elements.
    action: {
      // The color of an active action like an icon button.
      active: "rgba(0, 0, 0, 0.54)",
      // The color of an hovered action.
      hover: "rgba(0, 0, 0, 0.04)",
      hoverOpacity: 0.04,
      // The color of a selected action.
      selected: "rgba(0, 0, 0, 0.08)",
      selectedOpacity: 0.08,
      // The color of a disabled action.
      disabled: "rgba(0, 0, 0, 0.26)",
      // The background color of a disabled action.
      disabledBackground: "rgba(0, 0, 0, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(0, 0, 0, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.12
    }
  };
}
const Nn = Zr();
function et() {
  return {
    text: {
      primary: Oe.white,
      secondary: "rgba(255, 255, 255, 0.7)",
      disabled: "rgba(255, 255, 255, 0.5)",
      icon: "rgba(255, 255, 255, 0.5)"
    },
    divider: "rgba(255, 255, 255, 0.12)",
    background: {
      paper: "#121212",
      default: "#121212"
    },
    action: {
      active: Oe.white,
      hover: "rgba(255, 255, 255, 0.08)",
      hoverOpacity: 0.08,
      selected: "rgba(255, 255, 255, 0.16)",
      selectedOpacity: 0.16,
      disabled: "rgba(255, 255, 255, 0.3)",
      disabledBackground: "rgba(255, 255, 255, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(255, 255, 255, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.24
    }
  };
}
const Ir = et();
function Br(e, r, t, n) {
  const o = n.light || n, a = n.dark || n * 1.5;
  e[r] || (e.hasOwnProperty(t) ? e[r] = e[t] : r === "light" ? e.light = dr(e.main, o) : r === "dark" && (e.dark = fr(e.main, a)));
}
function Dn(e = "light") {
  return e === "dark" ? {
    main: ye[200],
    light: ye[50],
    dark: ye[400]
  } : {
    main: ye[700],
    light: ye[400],
    dark: ye[800]
  };
}
function Wn(e = "light") {
  return e === "dark" ? {
    main: ge[200],
    light: ge[50],
    dark: ge[400]
  } : {
    main: ge[500],
    light: ge[300],
    dark: ge[700]
  };
}
function Fn(e = "light") {
  return e === "dark" ? {
    main: he[500],
    light: he[300],
    dark: he[700]
  } : {
    main: he[700],
    light: he[400],
    dark: he[800]
  };
}
function Un(e = "light") {
  return e === "dark" ? {
    main: be[400],
    light: be[300],
    dark: be[700]
  } : {
    main: be[700],
    light: be[500],
    dark: be[900]
  };
}
function Vn(e = "light") {
  return e === "dark" ? {
    main: ve[400],
    light: ve[300],
    dark: ve[700]
  } : {
    main: ve[800],
    light: ve[500],
    dark: ve[900]
  };
}
function Ln(e = "light") {
  return e === "dark" ? {
    main: Te[400],
    light: Te[300],
    dark: Te[700]
  } : {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: Te[500],
    dark: Te[900]
  };
}
function pr(e) {
  const {
    mode: r = "light",
    contrastThreshold: t = 3,
    tonalOffset: n = 0.2,
    ...o
  } = e, a = e.primary || Dn(r), s = e.secondary || Wn(r), c = e.error || Fn(r), l = e.info || Un(r), f = e.success || Vn(r), h = e.warning || Ln(r);
  function d(b) {
    const x = Pr(b, Ir.text.primary) >= t ? Ir.text.primary : Nn.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const $ = Pr(b, x);
      $ < 3 && console.error([`MUI: The contrast ratio of ${$}:1 for ${x} on ${b}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return x;
  }
  const p = ({
    color: b,
    name: x,
    mainShade: $ = 500,
    lightShade: Y = 300,
    darkShade: E = 700
  }) => {
    if (b = {
      ...b
    }, !b.main && b[$] && (b.main = b[$]), !b.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${x ? ` (${x})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${$}\` property.` : de(11, x ? ` (${x})` : "", $));
    if (typeof b.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${x ? ` (${x})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(b.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : de(12, x ? ` (${x})` : "", JSON.stringify(b.main)));
    return Br(b, "light", Y, n), Br(b, "dark", E, n), b.contrastText || (b.contrastText = d(b.main)), b;
  };
  let S;
  return r === "light" ? S = Zr() : r === "dark" && (S = et()), process.env.NODE_ENV !== "production" && (S || console.error(`MUI: The palette mode \`${r}\` is not supported.`)), Q({
    // A collection of common colors.
    common: {
      ...Oe
    },
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode: r,
    // The colors used to represent primary interface elements for a user.
    primary: p({
      color: a,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: p({
      color: s,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: p({
      color: c,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: p({
      color: h,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: p({
      color: l,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: p({
      color: f,
      name: "success"
    }),
    // The grey colors.
    grey: Mn,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold: t,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText: d,
    // Generate a rich color object.
    augmentColor: p,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: n,
    // The light and dark mode object.
    ...S
  }, o);
}
function zn(e) {
  const r = {};
  return Object.entries(e).forEach((n) => {
    const [o, a] = n;
    typeof a == "object" && (r[o] = `${a.fontStyle ? `${a.fontStyle} ` : ""}${a.fontVariant ? `${a.fontVariant} ` : ""}${a.fontWeight ? `${a.fontWeight} ` : ""}${a.fontStretch ? `${a.fontStretch} ` : ""}${a.fontSize || ""}${a.lineHeight ? `/${a.lineHeight} ` : ""}${a.fontFamily || ""}`);
  }), r;
}
function Gn(e, r) {
  return {
    toolbar: {
      minHeight: 56,
      [e.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [e.up("sm")]: {
        minHeight: 64
      }
    },
    ...r
  };
}
function Yn(e) {
  return Math.round(e * 1e5) / 1e5;
}
const jr = {
  textTransform: "uppercase"
}, Mr = '"Roboto", "Helvetica", "Arial", sans-serif';
function Kn(e, r) {
  const {
    fontFamily: t = Mr,
    // The default font size of the Material Specification.
    fontSize: n = 14,
    // px
    fontWeightLight: o = 300,
    fontWeightRegular: a = 400,
    fontWeightMedium: s = 500,
    fontWeightBold: c = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize: l = 16,
    // Apply the CSS properties to all the variants.
    allVariants: f,
    pxToRem: h,
    ...d
  } = typeof r == "function" ? r(e) : r;
  process.env.NODE_ENV !== "production" && (typeof n != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof l != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const p = n / 14, S = h || ((x) => `${x / l * p}rem`), T = (x, $, Y, E, w) => ({
    fontFamily: t,
    fontWeight: x,
    fontSize: S($),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight: Y,
    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing
    // across font-families can cause issues with the kerning.
    ...t === Mr ? {
      letterSpacing: `${Yn(E / $)}em`
    } : {},
    ...w,
    ...f
  }), b = {
    h1: T(o, 96, 1.167, -1.5),
    h2: T(o, 60, 1.2, -0.5),
    h3: T(a, 48, 1.167, 0),
    h4: T(a, 34, 1.235, 0.25),
    h5: T(a, 24, 1.334, 0),
    h6: T(s, 20, 1.6, 0.15),
    subtitle1: T(a, 16, 1.75, 0.15),
    subtitle2: T(s, 14, 1.57, 0.1),
    body1: T(a, 16, 1.5, 0.15),
    body2: T(a, 14, 1.43, 0.15),
    button: T(s, 14, 1.75, 0.4, jr),
    caption: T(a, 12, 1.66, 0.4),
    overline: T(a, 12, 2.66, 1, jr),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return Q({
    htmlFontSize: l,
    pxToRem: S,
    fontFamily: t,
    fontSize: n,
    fontWeightLight: o,
    fontWeightRegular: a,
    fontWeightMedium: s,
    fontWeightBold: c,
    ...b
  }, d, {
    clone: !1
    // No need to clone deep
  });
}
const qn = 0.2, Hn = 0.14, Qn = 0.12;
function U(...e) {
  return [`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,${qn})`, `${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,${Hn})`, `${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,${Qn})`].join(",");
}
const Jn = ["none", U(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), U(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), U(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), U(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), U(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), U(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), U(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), U(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), U(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), U(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), U(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), U(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), U(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), U(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), U(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), U(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), U(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), U(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), U(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), U(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), U(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), U(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), U(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), U(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], Xn = {
  // This is the most common easing curve.
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, Zn = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function Nr(e) {
  return `${Math.round(e)}ms`;
}
function eo(e) {
  if (!e)
    return 0;
  const r = e / 36;
  return Math.min(Math.round((4 + 15 * r ** 0.25 + r / 5) * 10), 3e3);
}
function ro(e) {
  const r = {
    ...Xn,
    ...e.easing
  }, t = {
    ...Zn,
    ...e.duration
  };
  return {
    getAutoHeightDuration: eo,
    create: (o = ["all"], a = {}) => {
      const {
        duration: s = t.standard,
        easing: c = r.easeInOut,
        delay: l = 0,
        ...f
      } = a;
      if (process.env.NODE_ENV !== "production") {
        const h = (p) => typeof p == "string", d = (p) => !Number.isNaN(parseFloat(p));
        !h(o) && !Array.isArray(o) && console.error('MUI: Argument "props" must be a string or Array.'), !d(s) && !h(s) && console.error(`MUI: Argument "duration" must be a number or a string but found ${s}.`), h(c) || console.error('MUI: Argument "easing" must be a string.'), !d(l) && !h(l) && console.error('MUI: Argument "delay" must be a number or a string.'), typeof a != "object" && console.error(["MUI: Secong argument of transition.create must be an object.", "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join(`
`)), Object.keys(f).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(f).join(",")}].`);
      }
      return (Array.isArray(o) ? o : [o]).map((h) => `${h} ${typeof s == "string" ? s : Nr(s)} ${c} ${typeof l == "string" ? l : Nr(l)}`).join(",");
    },
    ...e,
    easing: r,
    duration: t
  };
}
const to = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
function no(e) {
  return le(e) || typeof e > "u" || typeof e == "string" || typeof e == "boolean" || typeof e == "number" || Array.isArray(e);
}
function rt(e = {}) {
  const r = {
    ...e
  };
  function t(n) {
    const o = Object.entries(n);
    for (let a = 0; a < o.length; a++) {
      const [s, c] = o[a];
      !no(c) || s.startsWith("unstable_") ? delete n[s] : le(c) && (n[s] = {
        ...c
      }, t(n[s]));
    }
  }
  return t(r), `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(r, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`;
}
function Me(e = {}, ...r) {
  const {
    breakpoints: t,
    mixins: n = {},
    spacing: o,
    palette: a = {},
    transitions: s = {},
    typography: c = {},
    shape: l,
    ...f
  } = e;
  if (e.vars)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name." : de(20));
  const h = pr(a), d = Cn(e);
  let p = Q(d, {
    mixins: Gn(d.breakpoints, n),
    palette: h,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: Jn.slice(),
    typography: Kn(h, c),
    transitions: ro(s),
    zIndex: {
      ...to
    }
  });
  if (p = Q(p, f), p = r.reduce((S, T) => Q(S, T), p), process.env.NODE_ENV !== "production") {
    const S = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], T = (b, x) => {
      let $;
      for ($ in b) {
        const Y = b[$];
        if (S.includes($) && Object.keys(Y).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const E = Jr("", $);
            console.error([`MUI: The \`${x}\` component increases the CSS specificity of the \`${$}\` internal state.`, "You can not override it like this: ", JSON.stringify(b, null, 2), "", `Instead, you need to use the '&.${E}' syntax:`, JSON.stringify({
              root: {
                [`&.${E}`]: Y
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          b[$] = {};
        }
      }
    };
    Object.keys(p.components).forEach((b) => {
      const x = p.components[b].styleOverrides;
      x && b.startsWith("Mui") && T(x, b);
    });
  }
  return p.unstable_sxConfig = {
    ...Ye,
    ...f == null ? void 0 : f.unstable_sxConfig
  }, p.unstable_sx = function(T) {
    return Ke({
      sx: T,
      theme: this
    });
  }, p.toRuntimeSource = rt, p;
}
let Dr = !1;
function Oo(...e) {
  return process.env.NODE_ENV !== "production" && (Dr || (Dr = !0, console.error(["MUI: the createMuiTheme function was renamed to createTheme.", "", "You should use `import { createTheme } from '@mui/material/styles'`"].join(`
`)))), Me(...e);
}
function oo(e) {
  let r;
  return e < 1 ? r = 5.11916 * e ** 2 : r = 4.5 * Math.log(e + 1) + 2, Math.round(r * 10) / 1e3;
}
const io = [...Array(25)].map((e, r) => {
  if (r === 0)
    return "none";
  const t = oo(r);
  return `linear-gradient(rgba(255 255 255 / ${t}), rgba(255 255 255 / ${t}))`;
});
function tt(e) {
  return {
    inputPlaceholder: e === "dark" ? 0.5 : 0.42,
    inputUnderline: e === "dark" ? 0.7 : 0.42,
    switchTrackDisabled: e === "dark" ? 0.2 : 0.12,
    switchTrack: e === "dark" ? 0.3 : 0.38
  };
}
function nt(e) {
  return e === "dark" ? io : [];
}
function ao(e) {
  const {
    palette: r = {
      mode: "light"
    },
    // need to cast to avoid module augmentation test
    opacity: t,
    overlays: n,
    ...o
  } = e, a = pr(r);
  return {
    palette: a,
    opacity: {
      ...tt(a.mode),
      ...t
    },
    overlays: n || nt(a.mode),
    ...o
  };
}
function so(e) {
  var r;
  return !!e[0].match(/(cssVarPrefix|colorSchemeSelector|rootSelector|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((r = e[1]) != null && r.match(/(mode|contrastThreshold|tonalOffset)/));
}
const co = (e) => [...[...Array(25)].map((r, t) => `--${e ? `${e}-` : ""}overlays-${t}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], uo = (e) => (r, t) => {
  const n = e.rootSelector || ":root", o = e.colorSchemeSelector;
  let a = o;
  if (o === "class" && (a = ".%s"), o === "data" && (a = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (a = `[${o}="%s"]`), e.defaultColorScheme === r) {
    if (r === "dark") {
      const s = {};
      return co(e.cssVarPrefix).forEach((c) => {
        s[c] = t[c], delete t[c];
      }), a === "media" ? {
        [n]: t,
        "@media (prefers-color-scheme: dark)": {
          [n]: s
        }
      } : a ? {
        [a.replace("%s", r)]: s,
        [`${n}, ${a.replace("%s", r)}`]: t
      } : {
        [n]: {
          ...t,
          ...s
        }
      };
    }
    if (a && a !== "media")
      return `${n}, ${a.replace("%s", String(r))}`;
  } else if (r) {
    if (a === "media")
      return {
        [`@media (prefers-color-scheme: ${String(r)})`]: {
          [n]: t
        }
      };
    if (a)
      return a.replace("%s", String(r));
  }
  return n;
};
function lo(e, r) {
  r.forEach((t) => {
    e[t] || (e[t] = {});
  });
}
function u(e, r, t) {
  !e[r] && t && (e[r] = t);
}
function Ee(e) {
  return !e || !e.startsWith("hsl") ? e : Xr(e);
}
function ae(e, r) {
  `${r}Channel` in e || (e[`${r}Channel`] = we(Ee(e[r]), `MUI: Can't create \`palette.${r}Channel\` because \`palette.${r}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${r}Channel\` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.`));
}
function fo(e) {
  return typeof e == "number" ? `${e}px` : typeof e == "string" || typeof e == "function" || Array.isArray(e) ? e : "8px";
}
const oe = (e) => {
  try {
    return e();
  } catch {
  }
}, po = (e = "mui") => Pn(e);
function or(e, r, t, n) {
  if (!r)
    return;
  r = r === !0 ? {} : r;
  const o = n === "dark" ? "dark" : "light";
  if (!t) {
    e[n] = ao({
      ...r,
      palette: {
        mode: o,
        ...r == null ? void 0 : r.palette
      }
    });
    return;
  }
  const {
    palette: a,
    ...s
  } = Me({
    ...t,
    palette: {
      mode: o,
      ...r == null ? void 0 : r.palette
    }
  });
  return e[n] = {
    ...r,
    palette: a,
    opacity: {
      ...tt(o),
      ...r == null ? void 0 : r.opacity
    },
    overlays: (r == null ? void 0 : r.overlays) || nt(o)
  }, s;
}
function mo(e = {}, ...r) {
  const {
    colorSchemes: t = {
      light: !0
    },
    defaultColorScheme: n,
    disableCssColorScheme: o = !1,
    cssVarPrefix: a = "mui",
    shouldSkipGeneratingVar: s = so,
    colorSchemeSelector: c = t.light && t.dark ? "media" : void 0,
    rootSelector: l = ":root",
    ...f
  } = e, h = Object.keys(t)[0], d = n || (t.light && h !== "light" ? "light" : h), p = po(a), {
    [d]: S,
    light: T,
    dark: b,
    ...x
  } = t, $ = {
    ...x
  };
  let Y = S;
  if ((d === "dark" && !("dark" in t) || d === "light" && !("light" in t)) && (Y = !0), !Y)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The \`colorSchemes.${d}\` option is either missing or invalid.` : de(21, d));
  const E = or($, Y, f, d);
  T && !$.light && or($, T, void 0, "light"), b && !$.dark && or($, b, void 0, "dark");
  let w = {
    defaultColorScheme: d,
    ...E,
    cssVarPrefix: a,
    colorSchemeSelector: c,
    rootSelector: l,
    getCssVar: p,
    colorSchemes: $,
    font: {
      ...zn(E.typography),
      ...E.font
    },
    spacing: fo(f.spacing)
  };
  Object.keys(w.colorSchemes).forEach((q) => {
    const i = w.colorSchemes[q].palette, C = (j) => {
      const V = j.split("-"), re = V[1], ue = V[2];
      return p(j, i[re][ue]);
    };
    if (i.mode === "light" && (u(i.common, "background", "#fff"), u(i.common, "onBackground", "#000")), i.mode === "dark" && (u(i.common, "background", "#000"), u(i.common, "onBackground", "#fff")), lo(i, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), i.mode === "light") {
      u(i.Alert, "errorColor", W(i.error.light, 0.6)), u(i.Alert, "infoColor", W(i.info.light, 0.6)), u(i.Alert, "successColor", W(i.success.light, 0.6)), u(i.Alert, "warningColor", W(i.warning.light, 0.6)), u(i.Alert, "errorFilledBg", C("palette-error-main")), u(i.Alert, "infoFilledBg", C("palette-info-main")), u(i.Alert, "successFilledBg", C("palette-success-main")), u(i.Alert, "warningFilledBg", C("palette-warning-main")), u(i.Alert, "errorFilledColor", oe(() => i.getContrastText(i.error.main))), u(i.Alert, "infoFilledColor", oe(() => i.getContrastText(i.info.main))), u(i.Alert, "successFilledColor", oe(() => i.getContrastText(i.success.main))), u(i.Alert, "warningFilledColor", oe(() => i.getContrastText(i.warning.main))), u(i.Alert, "errorStandardBg", F(i.error.light, 0.9)), u(i.Alert, "infoStandardBg", F(i.info.light, 0.9)), u(i.Alert, "successStandardBg", F(i.success.light, 0.9)), u(i.Alert, "warningStandardBg", F(i.warning.light, 0.9)), u(i.Alert, "errorIconColor", C("palette-error-main")), u(i.Alert, "infoIconColor", C("palette-info-main")), u(i.Alert, "successIconColor", C("palette-success-main")), u(i.Alert, "warningIconColor", C("palette-warning-main")), u(i.AppBar, "defaultBg", C("palette-grey-100")), u(i.Avatar, "defaultBg", C("palette-grey-400")), u(i.Button, "inheritContainedBg", C("palette-grey-300")), u(i.Button, "inheritContainedHoverBg", C("palette-grey-A100")), u(i.Chip, "defaultBorder", C("palette-grey-400")), u(i.Chip, "defaultAvatarColor", C("palette-grey-700")), u(i.Chip, "defaultIconColor", C("palette-grey-700")), u(i.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), u(i.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), u(i.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), u(i.LinearProgress, "primaryBg", F(i.primary.main, 0.62)), u(i.LinearProgress, "secondaryBg", F(i.secondary.main, 0.62)), u(i.LinearProgress, "errorBg", F(i.error.main, 0.62)), u(i.LinearProgress, "infoBg", F(i.info.main, 0.62)), u(i.LinearProgress, "successBg", F(i.success.main, 0.62)), u(i.LinearProgress, "warningBg", F(i.warning.main, 0.62)), u(i.Skeleton, "bg", `rgba(${C("palette-text-primaryChannel")} / 0.11)`), u(i.Slider, "primaryTrack", F(i.primary.main, 0.62)), u(i.Slider, "secondaryTrack", F(i.secondary.main, 0.62)), u(i.Slider, "errorTrack", F(i.error.main, 0.62)), u(i.Slider, "infoTrack", F(i.info.main, 0.62)), u(i.Slider, "successTrack", F(i.success.main, 0.62)), u(i.Slider, "warningTrack", F(i.warning.main, 0.62));
      const j = Ie(i.background.default, 0.8);
      u(i.SnackbarContent, "bg", j), u(i.SnackbarContent, "color", oe(() => i.getContrastText(j))), u(i.SpeedDialAction, "fabHoverBg", Ie(i.background.paper, 0.15)), u(i.StepConnector, "border", C("palette-grey-400")), u(i.StepContent, "border", C("palette-grey-400")), u(i.Switch, "defaultColor", C("palette-common-white")), u(i.Switch, "defaultDisabledColor", C("palette-grey-100")), u(i.Switch, "primaryDisabledColor", F(i.primary.main, 0.62)), u(i.Switch, "secondaryDisabledColor", F(i.secondary.main, 0.62)), u(i.Switch, "errorDisabledColor", F(i.error.main, 0.62)), u(i.Switch, "infoDisabledColor", F(i.info.main, 0.62)), u(i.Switch, "successDisabledColor", F(i.success.main, 0.62)), u(i.Switch, "warningDisabledColor", F(i.warning.main, 0.62)), u(i.TableCell, "border", F(Re(i.divider, 1), 0.88)), u(i.Tooltip, "bg", Re(i.grey[700], 0.92));
    }
    if (i.mode === "dark") {
      u(i.Alert, "errorColor", F(i.error.light, 0.6)), u(i.Alert, "infoColor", F(i.info.light, 0.6)), u(i.Alert, "successColor", F(i.success.light, 0.6)), u(i.Alert, "warningColor", F(i.warning.light, 0.6)), u(i.Alert, "errorFilledBg", C("palette-error-dark")), u(i.Alert, "infoFilledBg", C("palette-info-dark")), u(i.Alert, "successFilledBg", C("palette-success-dark")), u(i.Alert, "warningFilledBg", C("palette-warning-dark")), u(i.Alert, "errorFilledColor", oe(() => i.getContrastText(i.error.dark))), u(i.Alert, "infoFilledColor", oe(() => i.getContrastText(i.info.dark))), u(i.Alert, "successFilledColor", oe(() => i.getContrastText(i.success.dark))), u(i.Alert, "warningFilledColor", oe(() => i.getContrastText(i.warning.dark))), u(i.Alert, "errorStandardBg", W(i.error.light, 0.9)), u(i.Alert, "infoStandardBg", W(i.info.light, 0.9)), u(i.Alert, "successStandardBg", W(i.success.light, 0.9)), u(i.Alert, "warningStandardBg", W(i.warning.light, 0.9)), u(i.Alert, "errorIconColor", C("palette-error-main")), u(i.Alert, "infoIconColor", C("palette-info-main")), u(i.Alert, "successIconColor", C("palette-success-main")), u(i.Alert, "warningIconColor", C("palette-warning-main")), u(i.AppBar, "defaultBg", C("palette-grey-900")), u(i.AppBar, "darkBg", C("palette-background-paper")), u(i.AppBar, "darkColor", C("palette-text-primary")), u(i.Avatar, "defaultBg", C("palette-grey-600")), u(i.Button, "inheritContainedBg", C("palette-grey-800")), u(i.Button, "inheritContainedHoverBg", C("palette-grey-700")), u(i.Chip, "defaultBorder", C("palette-grey-700")), u(i.Chip, "defaultAvatarColor", C("palette-grey-300")), u(i.Chip, "defaultIconColor", C("palette-grey-300")), u(i.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), u(i.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), u(i.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), u(i.LinearProgress, "primaryBg", W(i.primary.main, 0.5)), u(i.LinearProgress, "secondaryBg", W(i.secondary.main, 0.5)), u(i.LinearProgress, "errorBg", W(i.error.main, 0.5)), u(i.LinearProgress, "infoBg", W(i.info.main, 0.5)), u(i.LinearProgress, "successBg", W(i.success.main, 0.5)), u(i.LinearProgress, "warningBg", W(i.warning.main, 0.5)), u(i.Skeleton, "bg", `rgba(${C("palette-text-primaryChannel")} / 0.13)`), u(i.Slider, "primaryTrack", W(i.primary.main, 0.5)), u(i.Slider, "secondaryTrack", W(i.secondary.main, 0.5)), u(i.Slider, "errorTrack", W(i.error.main, 0.5)), u(i.Slider, "infoTrack", W(i.info.main, 0.5)), u(i.Slider, "successTrack", W(i.success.main, 0.5)), u(i.Slider, "warningTrack", W(i.warning.main, 0.5));
      const j = Ie(i.background.default, 0.98);
      u(i.SnackbarContent, "bg", j), u(i.SnackbarContent, "color", oe(() => i.getContrastText(j))), u(i.SpeedDialAction, "fabHoverBg", Ie(i.background.paper, 0.15)), u(i.StepConnector, "border", C("palette-grey-600")), u(i.StepContent, "border", C("palette-grey-600")), u(i.Switch, "defaultColor", C("palette-grey-300")), u(i.Switch, "defaultDisabledColor", C("palette-grey-600")), u(i.Switch, "primaryDisabledColor", W(i.primary.main, 0.55)), u(i.Switch, "secondaryDisabledColor", W(i.secondary.main, 0.55)), u(i.Switch, "errorDisabledColor", W(i.error.main, 0.55)), u(i.Switch, "infoDisabledColor", W(i.info.main, 0.55)), u(i.Switch, "successDisabledColor", W(i.success.main, 0.55)), u(i.Switch, "warningDisabledColor", W(i.warning.main, 0.55)), u(i.TableCell, "border", W(Re(i.divider, 1), 0.68)), u(i.Tooltip, "bg", Re(i.grey[700], 0.92));
    }
    ae(i.background, "default"), ae(i.background, "paper"), ae(i.common, "background"), ae(i.common, "onBackground"), ae(i, "divider"), Object.keys(i).forEach((j) => {
      const V = i[j];
      V && typeof V == "object" && (V.main && u(i[j], "mainChannel", we(Ee(V.main))), V.light && u(i[j], "lightChannel", we(Ee(V.light))), V.dark && u(i[j], "darkChannel", we(Ee(V.dark))), V.contrastText && u(i[j], "contrastTextChannel", we(Ee(V.contrastText))), j === "text" && (ae(i[j], "primary"), ae(i[j], "secondary")), j === "action" && (V.active && ae(i[j], "active"), V.selected && ae(i[j], "selected")));
    });
  }), w = r.reduce((q, i) => Q(q, i), w);
  const g = {
    prefix: a,
    disableCssColorScheme: o,
    shouldSkipGeneratingVar: s,
    getSelector: uo(w)
  }, {
    vars: K,
    generateThemeVars: X,
    generateStyleSheets: ie
  } = Bn(w, g);
  return w.vars = K, Object.entries(w.colorSchemes[w.defaultColorScheme]).forEach(([q, i]) => {
    w[q] = i;
  }), w.generateThemeVars = X, w.generateStyleSheets = ie, w.generateSpacing = function() {
    return Qr(f.spacing, cr(this));
  }, w.getColorSchemeSelector = jn(c), w.spacing = w.generateSpacing(), w.shouldSkipGeneratingVar = s, w.unstable_sxConfig = {
    ...Ye,
    ...f == null ? void 0 : f.unstable_sxConfig
  }, w.unstable_sx = function(i) {
    return Ke({
      sx: i,
      theme: this
    });
  }, w.toRuntimeSource = rt, w;
}
function Wr(e, r, t) {
  e.colorSchemes && t && (e.colorSchemes[r] = {
    ...t !== !0 && t,
    palette: pr({
      ...t === !0 ? {} : t.palette,
      mode: r
    })
    // cast type to skip module augmentation test
  });
}
function $o(e = {}, ...r) {
  const {
    palette: t,
    cssVariables: n = !1,
    colorSchemes: o = t ? void 0 : {
      light: !0
    },
    defaultColorScheme: a = t == null ? void 0 : t.mode,
    ...s
  } = e, c = a || "light", l = o == null ? void 0 : o[c], f = {
    ...o,
    ...t ? {
      [c]: {
        ...typeof l != "boolean" && l,
        palette: t
      }
    } : void 0
  };
  if (n === !1) {
    if (!("colorSchemes" in e))
      return Me(e, ...r);
    let h = t;
    "palette" in e || f[c] && (f[c] !== !0 ? h = f[c].palette : c === "dark" && (h = {
      mode: "dark"
    }));
    const d = Me({
      ...e,
      palette: h
    }, ...r);
    return d.defaultColorScheme = c, d.colorSchemes = f, d.palette.mode === "light" && (d.colorSchemes.light = {
      ...f.light !== !0 && f.light,
      palette: d.palette
    }, Wr(d, "dark", f.dark)), d.palette.mode === "dark" && (d.colorSchemes.dark = {
      ...f.dark !== !0 && f.dark,
      palette: d.palette
    }, Wr(d, "light", f.light)), d;
  }
  return !t && !("light" in f) && c === "light" && (f.light = !0), mo({
    ...s,
    colorSchemes: f,
    defaultColorScheme: c,
    ...typeof n != "boolean" && n
  }, ...r);
}
const Ao = "$$material";
export {
  wo as $,
  mo as A,
  oo as B,
  so as C,
  Kn as D,
  Gn as E,
  co as F,
  bo as G,
  Jr as H,
  Eo as I,
  Ye as J,
  le as K,
  zr as L,
  Cn as M,
  De as N,
  Co as O,
  Ce as P,
  Ke as Q,
  wn as R,
  se as S,
  Ao as T,
  So as U,
  cr as V,
  Q as W,
  vo as X,
  Ae as Y,
  de as Z,
  yo as _,
  Mn as a,
  To as a0,
  Qr as a1,
  it as a2,
  ye as b,
  Oe as c,
  xo as d,
  Xr as e,
  ce as f,
  ve as g,
  On as h,
  qe as i,
  Pr as j,
  ar as k,
  be as l,
  kn as m,
  _n as n,
  Te as o,
  ge as p,
  fr as q,
  he as r,
  dr as s,
  bn as t,
  $o as u,
  Oo as v,
  ro as w,
  Zn as x,
  Xn as y,
  ao as z
};
