import { ReactNode } from "react";
export type BadgeRef = HTMLSpanElement;
/** Badge variant : notification */
export type NotificationBadgeVariant = {
    type: "notification";
    level: "warning" | "danger" | "info";
    color?: "background" | "text";
};
/** Badge variant : profile = teacher, student, relative or personnel */
export type ProfileBadgeVariant = {
    type: "profile";
    profile: "teacher" | "student" | "relative" | "personnel";
};
/** Badge variant : link */
export type LinkBadgeVariant = {
    type: "link";
};
export type BadgeVariants = NotificationBadgeVariant | ProfileBadgeVariant | LinkBadgeVariant;
export interface BadgeProps extends React.ComponentPropsWithRef<"span"> {
    /**
     * Badge variant : notification, link or profile (Teacher|Student|Relative|Personnel)
     * Defaults to notification.
     */
    variant?: BadgeVariants;
    /**
     * Is badge always visible ?
     * A badge with no children is hidden by default.
     */
    visibility?: "always";
    /**
     * If set, forces the radius of the rounded border.
     */
    rounded?: "pill" | "circle";
    /**
     * Text or icon (or whatever) to render as children elements.
     */
    children?: ReactNode;
    /**
     * Optional class for styling purpose
     */
    className?: string;
}
/**
 * Primary UI component for user interaction
 */
declare const Badge: import("react").ForwardRefExoticComponent<Omit<BadgeProps, "ref"> & import("react").RefAttributes<HTMLSpanElement>>;
export default Badge;
