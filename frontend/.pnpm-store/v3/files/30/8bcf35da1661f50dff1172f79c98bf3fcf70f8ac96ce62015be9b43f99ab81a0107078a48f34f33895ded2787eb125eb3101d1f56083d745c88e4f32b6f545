import * as d from "react";
import { H as p, I as f, G as u, P as s } from "./identifier-B7MO0PvI.js";
import { jsx as m } from "react/jsx-runtime";
import { s as C, u as y, c as v } from "./DefaultPropsProvider-BYFwNPLt.js";
import { P as b } from "./Paper-vlsh8Nca.js";
import { c as g } from "./chainPropTypes-D9lkm76m.js";
function h(o) {
  return p("MuiCard", o);
}
const x = f("MuiCard", ["root"]), w = (o) => {
  const {
    classes: e
  } = o;
  return v({
    root: ["root"]
  }, h, e);
}, P = C(b, {
  name: "MuiCard",
  slot: "Root",
  overridesResolver: (o, e) => e.root
})({
  overflow: "hidden"
}), M = /* @__PURE__ */ d.forwardRef(function(e, r) {
  const t = y({
    props: e,
    name: "MuiCard"
  }), {
    className: i,
    raised: a = !1,
    ...c
  } = t, n = {
    ...t,
    raised: a
  }, l = w(n);
  return /* @__PURE__ */ m(P, {
    className: u(l.root, i),
    elevation: a ? 8 : void 0,
    ref: r,
    ownerState: n,
    ...c
  });
});
process.env.NODE_ENV !== "production" && (M.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * If `true`, the card will use raised styling.
   * @default false
   */
  raised: g(s.bool, (o) => o.raised && o.variant === "outlined" ? new Error('MUI: Combining `raised={true}` with `variant="outlined"` has no effect.') : null),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object])
});
export {
  M as C,
  x as c,
  h as g
};
